syntax = "proto3";

package api.common.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
option go_package = "github.com/medtrib/haojishu-public/api/common/v1;v1";
option java_multiple_files = true;
option java_package = "api.common.v1";

service Common {
	// 获取验证码
	rpc GetCaptcha(GetCaptchaRequest) returns (GetCaptchaReply) {
		option (google.api.http) = {
			get : "/common/v1/GetCaptcha"
		};
	}

	// 验证验证码
	rpc VerifyCaptcha(VerifyCaptchaRequest) returns (VerifyCaptchaReply) {
		option (google.api.http) = {
			get : "/common/v1/VerifyCaptcha"
		};
	}

	// 防火墙检查
	rpc FireWallVerify(FireWallVerifyRequest) returns (FireWallVerifyReply) {
		option (google.api.http) = {
			get : "/common/v1/FireWallVerify"
		};
	}

}

// GetCaptchaRequest 获取图形验证码
message GetCaptchaRequest {
	// IP
	string LastIp = 2 [(validate.rules).string.ip = true];
}

// GetCaptchaReply 获取验证码返回
message GetCaptchaReply {
	string captchaId = 2;
	string data = 3;
}

// 验证验证码
message VerifyCaptchaRequest{
	// 验证码ID
	string CaptchaId = 2 [(validate.rules).string.ignore_empty = false];
	// 回答
	string Answer = 3 [(validate.rules).string.ignore_empty = false];
	// IP
	string LastIp = 4 [(validate.rules).string.ip = true];
}

// 验证验证码
message VerifyCaptchaReply{
	// 状态
	bool Status = 1;
}

// FireWallVerifyRequest 防火墙验证
message FireWallVerifyRequest {
	// IP
	string LastIp = 2 [(validate.rules).string.ip = true];
}

// FireWallVerifyReply 防火墙回复
message FireWallVerifyReply {
	bool Status = 1;
}