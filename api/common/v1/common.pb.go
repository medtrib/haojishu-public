// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: api/common/v1/common.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetCaptchaReq 获取图形验证码
type GetCaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP
	LastIp string `protobuf:"bytes,2,opt,name=LastIp,proto3" json:"LastIp,omitempty"`
}

func (x *GetCaptchaReq) Reset() {
	*x = GetCaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaptchaReq) ProtoMessage() {}

func (x *GetCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaptchaReq.ProtoReflect.Descriptor instead.
func (*GetCaptchaReq) Descriptor() ([]byte, []int) {
	return file_api_common_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *GetCaptchaReq) GetLastIp() string {
	if x != nil {
		return x.LastIp
	}
	return ""
}

// GetCaptchaRep 获取验证码返回
type GetCaptchaRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptchaId string `protobuf:"bytes,2,opt,name=captchaId,proto3" json:"captchaId,omitempty"`
	Data      string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCaptchaRep) Reset() {
	*x = GetCaptchaRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaptchaRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaptchaRep) ProtoMessage() {}

func (x *GetCaptchaRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaptchaRep.ProtoReflect.Descriptor instead.
func (*GetCaptchaRep) Descriptor() ([]byte, []int) {
	return file_api_common_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *GetCaptchaRep) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

func (x *GetCaptchaRep) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// 验证验证码
type VerifyCaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 验证码ID
	CaptchaId string `protobuf:"bytes,2,opt,name=CaptchaId,proto3" json:"CaptchaId,omitempty"`
	// 回答
	Answer string `protobuf:"bytes,3,opt,name=Answer,proto3" json:"Answer,omitempty"`
	// IP
	LastIp string `protobuf:"bytes,4,opt,name=LastIp,proto3" json:"LastIp,omitempty"`
}

func (x *VerifyCaptchaReq) Reset() {
	*x = VerifyCaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_v1_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCaptchaReq) ProtoMessage() {}

func (x *VerifyCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCaptchaReq.ProtoReflect.Descriptor instead.
func (*VerifyCaptchaReq) Descriptor() ([]byte, []int) {
	return file_api_common_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyCaptchaReq) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

func (x *VerifyCaptchaReq) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *VerifyCaptchaReq) GetLastIp() string {
	if x != nil {
		return x.LastIp
	}
	return ""
}

// 验证验证码
type VerifyCaptchaRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 状态
	Status bool `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *VerifyCaptchaRep) Reset() {
	*x = VerifyCaptchaRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_v1_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCaptchaRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCaptchaRep) ProtoMessage() {}

func (x *VerifyCaptchaRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCaptchaRep.ProtoReflect.Descriptor instead.
func (*VerifyCaptchaRep) Descriptor() ([]byte, []int) {
	return file_api_common_v1_common_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyCaptchaRep) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// FireWallVerifyRequest 防火墙验证
type FireWallVerifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP
	LastIp string `protobuf:"bytes,2,opt,name=LastIp,proto3" json:"LastIp,omitempty"`
}

func (x *FireWallVerifyReq) Reset() {
	*x = FireWallVerifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_v1_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireWallVerifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireWallVerifyReq) ProtoMessage() {}

func (x *FireWallVerifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireWallVerifyReq.ProtoReflect.Descriptor instead.
func (*FireWallVerifyReq) Descriptor() ([]byte, []int) {
	return file_api_common_v1_common_proto_rawDescGZIP(), []int{4}
}

func (x *FireWallVerifyReq) GetLastIp() string {
	if x != nil {
		return x.LastIp
	}
	return ""
}

// FireWallVerifyReply 防火墙回复
type FireWallVerifyRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *FireWallVerifyRep) Reset() {
	*x = FireWallVerifyRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_v1_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireWallVerifyRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireWallVerifyRep) ProtoMessage() {}

func (x *FireWallVerifyRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireWallVerifyRep.ProtoReflect.Descriptor instead.
func (*FireWallVerifyRep) Descriptor() ([]byte, []int) {
	return file_api_common_v1_common_proto_rawDescGZIP(), []int{5}
}

func (x *FireWallVerifyRep) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// 列表
type FireWallListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *FireWallListReq) Reset() {
	*x = FireWallListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_v1_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireWallListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireWallListReq) ProtoMessage() {}

func (x *FireWallListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireWallListReq.ProtoReflect.Descriptor instead.
func (*FireWallListReq) Descriptor() ([]byte, []int) {
	return file_api_common_v1_common_proto_rawDescGZIP(), []int{6}
}

func (x *FireWallListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FireWallListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 列表
type FireWallListRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FireWallListRep) Reset() {
	*x = FireWallListRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_v1_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireWallListRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireWallListRep) ProtoMessage() {}

func (x *FireWallListRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_v1_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireWallListRep.ProtoReflect.Descriptor instead.
func (*FireWallListRep) Descriptor() ([]byte, []int) {
	return file_api_common_v1_common_proto_rawDescGZIP(), []int{7}
}

func (x *FireWallListRep) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

var File_api_common_v1_common_proto protoreflect.FileDescriptor

var file_api_common_v1_common_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x30, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x06, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x06, 0x4c, 0x61,
	0x73, 0x74, 0x49, 0x70, 0x22, 0x41, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x52, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7d, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x09, 0x43,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0xd0, 0x01, 0x00, 0x52, 0x09, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xd0, 0x01, 0x00, 0x52, 0x06, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x06, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x06,
	0x4c, 0x61, 0x73, 0x74, 0x49, 0x70, 0x22, 0x2a, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x34, 0x0a, 0x11, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x06, 0x4c, 0x61, 0x73, 0x74, 0x49,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x70, 0x01,
	0x52, 0x06, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x70, 0x22, 0x2b, 0x0a, 0x11, 0x46, 0x69, 0x72, 0x65,
	0x57, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x41, 0x0a, 0x0f, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x46, 0x69, 0x72, 0x65,
	0x57, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32,
	0xd5, 0x08, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x52, 0x65, 0x70, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x12, 0x73, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x52, 0x65, 0x70, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x77, 0x0a, 0x0e, 0x46, 0x69, 0x72, 0x65,
	0x57, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72,
	0x65, 0x57, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x22, 0x21,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x12, 0x79, 0x0a, 0x0f, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x50, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x12, 0x1a, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x46, 0x69, 0x72,
	0x65, 0x57, 0x61, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x50, 0x12, 0x7d, 0x0a, 0x11,
	0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x50, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x70, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x50, 0x12, 0x71, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x50, 0x73, 0x12, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72,
	0x65, 0x57, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72,
	0x65, 0x57, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x50, 0x73, 0x12, 0x87,
	0x01, 0x0a, 0x16, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x54, 0x6f,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65,
	0x57, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x70, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x79, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x49, 0x50,
	0x73, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x47, 0x65, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x64, 0x49, 0x50, 0x73, 0x42, 0x46, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x64, 0x74, 0x72, 0x69, 0x62, 0x2f, 0x68,
	0x61, 0x6f, 0x6a, 0x69, 0x73, 0x68, 0x75, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_common_v1_common_proto_rawDescOnce sync.Once
	file_api_common_v1_common_proto_rawDescData = file_api_common_v1_common_proto_rawDesc
)

func file_api_common_v1_common_proto_rawDescGZIP() []byte {
	file_api_common_v1_common_proto_rawDescOnce.Do(func() {
		file_api_common_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_common_v1_common_proto_rawDescData)
	})
	return file_api_common_v1_common_proto_rawDescData
}

var file_api_common_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_common_v1_common_proto_goTypes = []interface{}{
	(*GetCaptchaReq)(nil),     // 0: api.common.v1.GetCaptchaReq
	(*GetCaptchaRep)(nil),     // 1: api.common.v1.GetCaptchaRep
	(*VerifyCaptchaReq)(nil),  // 2: api.common.v1.VerifyCaptchaReq
	(*VerifyCaptchaRep)(nil),  // 3: api.common.v1.VerifyCaptchaRep
	(*FireWallVerifyReq)(nil), // 4: api.common.v1.FireWallVerifyReq
	(*FireWallVerifyRep)(nil), // 5: api.common.v1.FireWallVerifyRep
	(*FireWallListReq)(nil),   // 6: api.common.v1.FireWallListReq
	(*FireWallListRep)(nil),   // 7: api.common.v1.FireWallListRep
}
var file_api_common_v1_common_proto_depIdxs = []int32{
	0, // 0: api.common.v1.Common.GetCaptcha:input_type -> api.common.v1.GetCaptchaReq
	2, // 1: api.common.v1.Common.VerifyCaptcha:input_type -> api.common.v1.VerifyCaptchaReq
	4, // 2: api.common.v1.Common.FireWallVerify:input_type -> api.common.v1.FireWallVerifyReq
	4, // 3: api.common.v1.Common.FireWallBlockIP:input_type -> api.common.v1.FireWallVerifyReq
	4, // 4: api.common.v1.Common.FireWallUnblockIP:input_type -> api.common.v1.FireWallVerifyReq
	6, // 5: api.common.v1.Common.GetBlockedIPs:input_type -> api.common.v1.FireWallListReq
	4, // 6: api.common.v1.Common.FireWallAddToWhitelist:input_type -> api.common.v1.FireWallVerifyReq
	4, // 7: api.common.v1.Common.RemoveFromWhitelist:input_type -> api.common.v1.FireWallVerifyReq
	6, // 8: api.common.v1.Common.GetWhitelistedIPs:input_type -> api.common.v1.FireWallListReq
	1, // 9: api.common.v1.Common.GetCaptcha:output_type -> api.common.v1.GetCaptchaRep
	3, // 10: api.common.v1.Common.VerifyCaptcha:output_type -> api.common.v1.VerifyCaptchaRep
	5, // 11: api.common.v1.Common.FireWallVerify:output_type -> api.common.v1.FireWallVerifyRep
	5, // 12: api.common.v1.Common.FireWallBlockIP:output_type -> api.common.v1.FireWallVerifyRep
	5, // 13: api.common.v1.Common.FireWallUnblockIP:output_type -> api.common.v1.FireWallVerifyRep
	7, // 14: api.common.v1.Common.GetBlockedIPs:output_type -> api.common.v1.FireWallListRep
	5, // 15: api.common.v1.Common.FireWallAddToWhitelist:output_type -> api.common.v1.FireWallVerifyRep
	5, // 16: api.common.v1.Common.RemoveFromWhitelist:output_type -> api.common.v1.FireWallVerifyRep
	7, // 17: api.common.v1.Common.GetWhitelistedIPs:output_type -> api.common.v1.FireWallListRep
	9, // [9:18] is the sub-list for method output_type
	0, // [0:9] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_common_v1_common_proto_init() }
func file_api_common_v1_common_proto_init() {
	if File_api_common_v1_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_common_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCaptchaRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_v1_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_v1_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCaptchaRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_v1_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireWallVerifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_v1_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireWallVerifyRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_v1_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireWallListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_v1_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireWallListRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_common_v1_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_common_v1_common_proto_goTypes,
		DependencyIndexes: file_api_common_v1_common_proto_depIdxs,
		MessageInfos:      file_api_common_v1_common_proto_msgTypes,
	}.Build()
	File_api_common_v1_common_proto = out.File
	file_api_common_v1_common_proto_rawDesc = nil
	file_api_common_v1_common_proto_goTypes = nil
	file_api_common_v1_common_proto_depIdxs = nil
}
