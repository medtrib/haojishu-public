syntax = "proto3";

package api.auth.v1;
import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/empty.proto";
option go_package = "haojishu-public/api/auth/v1;v1";
option java_multiple_files = true;
option java_package = "api.auth.v1";

// 权限认证服务
service Auth {
	// 添加角色
	rpc AddRole(AddRoleReq) returns(Role){
		option (google.api.http) = {
			post:"/auth/v1/AddRole"
			body:"*"
		};
	};
	// 编辑角色
	rpc EditRole(EditRoleReq) returns(RepStatus){
		option (google.api.http) = {
			put:"/auth/v1/EditRole"
			body:"*"
		};
	}
	// 删除角色
	rpc DelRole(DelRoleReq) returns (RepStatus){
		option (google.api.http) = {
			delete:"/auth/v1/DelRole"
		};
	}
	// 获取角色列表(完整)
	rpc FullRoleList(google.protobuf.Empty) returns (FullRoleListRep){
		option (google.api.http) = {
			get:"/auth/v1/FullRoleList"
		};
	}
	// 获取角色列表(分页)
	rpc PageRoleList(PageRoleListReq) returns (PageRoleListRep){
		option (google.api.http) = {
			get:"/auth/v1/PageRoleList"
		};
	}
	// 给用户设置角色
	rpc AddRolesForUser(SetUserForRoleReq) returns (RepStatus){
		option (google.api.http) = {
			get:"/auth/v1/AddRolesForUser"
		};
	};
	// 获取用户角色
	rpc GetRolesForUser (GetRolesForUserReq) returns (GetRolesForUserRep){
		option (google.api.http) = {
			get:"/auth/v1/GetRolesForUser"
		};
	};
	// 获取角色有那些用户
	rpc GetUsersForRole (GetUsersForRoleReq) returns (GetUsersForRoleRep){
		option (google.api.http) = {
			get:"/auth/v1/GetUsersForRole"
		};
	};
	// 删除单个用户角色(如果需要删除单个用户的某个角色用这个)
	rpc DeleteRoleForUser (DeleteRoleForUserReq) returns (RepStatus){
		option (google.api.http) = {
			delete:"/auth/v1/DeleteRoleForUser"
		};
	};
	// 删除多个用户角色(删除传递用户的所有角色)
	rpc DeleteRolesForUser (DeleteRolesForUserReq) returns (RepStatus){
		option (google.api.http) = {
			delete:"/auth/v1/DeleteRolesForUser"
		};
	};
	// 获取角色有那些权限
	rpc GetRolePolicies (GetRolePoliciesReq) returns (GetRolePoliciesRep){
		option (google.api.http) = {
			get:"/auth/v1/GetRolePolicies"
		};
	};
	// 设置角色权限
	rpc SetRolePolicies (SetRolePoliciesReq) returns (RepStatus){
		option (google.api.http) = {
			post:"/auth/v1/SetRolePolicies"
			body:"*"
		};
	};
	// 检查权限
	rpc CheckAuth (CheckAuthReq) returns (RepStatus){
		option (google.api.http) = {
			get:"/auth/v1/CheckAuth"
		};
	};
	// 创建菜单
	rpc CreateMenu(CreateMenuReq) returns (Menu){
		option (google.api.http) = {
			post:"/auth/v1/CreateMenu"
			body:"*"
		};
	}
	// 更新菜单
	rpc EditMenu (EditMenuReq) returns (RepStatus){
		option (google.api.http) = {
			put:"/auth/v1/EditMenu"
			body:"*"
		};
	};
	// 删除菜单
	rpc DeleteMenu (IdReq) returns (RepStatus){
		option (google.api.http) = {
			delete:"/auth/v1/DeleteMenu"
		};
	};
	// 菜单列表(完整)
	rpc ListMenu (google.protobuf.Empty) returns (ListMenuRep){
		option (google.api.http) = {
			get:"/auth/v1/ListMenu"
		};
	};
	// 菜单列表(树)
	rpc ListMenuTree (google.protobuf.Empty) returns (ListMenuRep){
		option (google.api.http) = {
			get:"/auth/v1/ListMenuTree"
		};
	};
	// 角色菜单添加
	rpc  CreateRoleMenu (CreateRoleMenuReq) returns (RepStatus){
		option (google.api.http) = {
			post:"/auth/v1/CreateRoleMenu"
			body:"*"
		};
	};
	// 角色菜单按钮添加
	rpc CreateRoleMenuBtn (CreateRoleMenuBtnReq) returns (RepStatus){
		option (google.api.http) = {
			post:"/auth/v1/CreateMenuBtn"
			body:"*"
		};
	};
	// 角色菜单列表(完整)
	rpc ListRoleMenu (ListRoleMenuReq) returns (ListMenuRep){
			option (google.api.http) = {
				get:"/auth/v1/ListRoleMenu"
			};
		};
	// 角色菜单 - 树状结构
	rpc ListRoleMenuTree (ListRoleMenuReq) returns (ListMenuRep){
		option (google.api.http) = {
			get:"/auth/v1/ListRoleMenuTree"
		};
	};
	// 角色菜单按钮 - 列表
	rpc GetRoleMenuBtn (GetRoleMenuBtnReq) returns (GetRoleMenuBtnRep){
		option (google.api.http) = {
			get:"/auth/v1//GetRoleMenuBtn"
		};
	};
}

// 添加角色
message AddRoleReq {
	// 名称
	string name = 1 [
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
}
// 编辑角色
message EditRoleReq{
	// 角色Id
	uint64 roleId = 1 [
		(validate.rules).uint64.gt = 0
	];
	// 角色名称
	string roleName = 2 [
		(validate.rules).string = {min_len:1, max_len:255}
	];
}
// 角色状态
message RepStatus{
	bool success = 1;
}
// 删除角色
message DelRoleReq{
	uint64 roleId = 1 [
		(validate.rules).uint64.gt = 0
	];
}
// 完整角色列表
message FullRoleListRep{
	repeated Role list = 1;
}
// 请求 分页角色列表
message PageRoleListReq{
	uint64 page = 1 [
		(validate.rules).uint64.gt = 0
	];
	uint64 pageSize = 2 [
		(validate.rules).uint64.gt = 0,
		(validate.rules).uint64.lt = 50
	];
	string roleName = 3 [
		(validate.rules).string = {min_len:1,max_len:255}
	];
}
// 分页角色列表
message PageRoleListRep{
	uint64 total = 1;
	repeated Role list =2;
}
// 角色
message Role {
	// 角色Id
	uint64 roleId = 1;
	// 角色名称
	string name = 2;
	// 创建时间
	string created_at = 4;
	// 更新时间
	string updated_at = 5;
}
// 给用户设置角色
message SetUserForRoleReq{
	// 用户名
	string username = 1[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 角色数组
	repeated string roles = 2[
		(validate.rules).repeated.min_items = 1
	];
}
// 获取用户角色
message GetRolesForUserReq {
	// 用户名
	string username = 1[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
}
// 获取用户角色
message GetRolesForUserRep{
	// 角色列表
	repeated string roles = 1;
}
// 获取角色有那些用户
message GetUsersForRoleReq {
	string role = 1[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
}
// 获取角色有那些用户
message GetUsersForRoleRep {
	// 用户列表
	repeated string users = 1;
}
// 删除单个用户角色
message DeleteRoleForUserReq{
	// 用户名
	string username = 1[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 角色名
	string role = 2[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
}
// 删除多个用户角色
message DeleteRolesForUserReq{
	// 用户名
	string username = 1[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
}
// 获取角色有那些权限
message GetRolePoliciesReq {
	string role = 1[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
}
// 获取角色有那些权限
message GetRolePoliciesRep{
	repeated PolicyRules policyRules = 1;
}
// 设置角色权限
message SetRolePoliciesReq {
	// 角色名
	string role = 1[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 权限
	repeated PolicyRules policyRules = 2[
		(validate.rules).repeated.min_items = 1
	];
}
message PolicyRules {
	string path = 1;
	string method = 2;
}
// 权限检查
message CheckAuthReq {
	string role = 1;
	string url = 2;
	string mod = 3;
}
// 创建菜单
message CreateMenuReq{
	// 父级id
	uint64 parent_id = 2;
	// 前端路径
	string path = 3[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 菜单名
	string name = 4[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 是否隐藏
	bool hidden = 5;
	// 前端文件路径
	string component = 6[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 排序
	uint64 sort = 7[
		(validate.rules).uint64.gt = 0
	];
	// 页面名称
	string title = 8[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 菜单图标
	string icon = 9[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 菜单按钮列表
	repeated MenuBtn menuBtns = 13;
	// 父级id字符串 英文逗号分割
	string parent_ids = 14[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
}
// 按钮详情
message MenuBtn {
	// 主键id
	uint64 id = 1;
	// 菜单id
	uint64 menu_id = 2;
	// 按钮名称
	string name = 3;
	// 描述
	string description = 4;
	// 英文标识
	string identifier = 5;
	// 创建时间
	string created_at = 6;
	// 更新时间
	string updated_at = 7;
}
// 菜单详情
message Menu {
	// 主键id
	uint64 id = 1;
	// 父级id
	uint64 parent_id = 2;
	// 前端路径
	string path = 3;
	// 菜单名
	string name = 4;
	// 是否隐藏
	bool hidden = 5;
	// 前端文件路径
	string component = 6;
	// 排序
	uint64 sort = 7;
	// 页面名称
	string title = 8;
	// 菜单图标
	string icon = 9;
	// 创建时间
	string created_at = 10;
	// 更新时间
	string updated_at = 11;
	// 子菜单
	repeated Menu children = 12;
	// 菜单按钮列表
	repeated MenuBtn menuBtns = 13;
	// 父级id字符串 英文逗号分割
	string parent_ids = 14;
}
// 编辑菜单
message EditMenuReq {
	// 主键id
	uint64 id = 1[
		(validate.rules).uint64.gt = 0
	];
	// 父级id
	uint64 parent_id = 2;
	// 前端路径
	string path = 3[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 菜单名
	string name = 4[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 是否隐藏
	bool hidden = 5;
	// 前端文件路径
	string component = 6[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 排序
	uint64 sort = 7[
		(validate.rules).uint64.gt = 0
	];
	// 页面名称
	string title = 8[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 菜单图标
	string icon = 9[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
	// 菜单按钮列表
	repeated MenuBtn menuBtns = 13;
	// 父级id字符串 英文逗号分割
	string parent_ids = 14[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
}
// 请求
message IdReq {
	// 主键id
	uint64 id = 1;
}
// 菜单返回
message  ListMenuRep {
	repeated Menu list= 1;
}
// 创建角色菜单按钮
message CreateRoleMenuBtnReq{
	// 角色id
	uint64 role_id = 1[
		(validate.rules).uint64.gt = 0
	];
	// 菜单id
	uint64 menu_id = 2[
		(validate.rules).uint64.gt = 0
	];
	// 按钮id数组
	repeated uint64 menu_btn_ids = 3[
		(validate.rules).repeated.min_items = 1
	];
}
// 角色菜单列表
message ListRoleMenuReq {
	string role = 1[
		(validate.rules).string = {min_len: 1, max_len: 255}
	];
}
message CreateRoleMenuReq{
	// 角色id
	uint64 role_id = 1[
		(validate.rules).uint64.gt = 0
	];
	// 菜单id数组
	repeated uint64 menu_ids = 2[
		(validate.rules).repeated.min_items = 1
	];
}
// 获取角色菜单按钮
message GetRoleMenuBtnReq {
	// 角色id
	uint64 role_id = 1;
	// 角色名称
	string role_name = 2;
	// 菜单id
	uint64 menu_id = 3;
}
// 角色菜单按钮列表
message GetRoleMenuBtnRep {
	// 菜单按钮列表
	repeated MenuBtn list = 1;
}